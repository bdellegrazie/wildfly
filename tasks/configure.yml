---
# task file for wildfly

- name: Create wildfly etc directory
  file: path={{ wildfly_conf_dir }} owner={{ wildfly_user }}
        group={{ wildfly_group }} mode=750 state=directory

- name: Copy wildfly configuration
  template: src=wildfly.conf.j2 dest={{ wildfly_conf_dir }}/wildfly.conf
            owner=root group=root mode=0640
  notify:
    - restart wildfly
    - change standalone data mode

- name: Make link from for wildfly configuration in /etc/default
  file:
    path=/etc/default/wildfly.conf
    owner=root
    group=root
    mode=644
    src={{ wildfly_conf_dir }}/wildfly.conf
    state=link
  when: wildfly_conf_dir != "/etc/defaults" or wildfly_conf_dir != "/etc/defaults/"

- name: Copy wildfly properties file
  template: src=wildfly.properties.j2 owner={{ wildfly_user }}
            group={{ wildfly_group }} mode=0640
            dest={{ wildfly_conf_dir }}/wildfly.properties
  notify:
    - restart wildfly
    - change standalone data mode

- name: Copy wildfly init script
  template: src=wildfly_initd.j2 dest={{ wildfly_init_dir }}/wildfly owner=root
            group=root mode=0750
  notify:
    - restart wildfly
    - change standalone data mode
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 7)

- name: Copy wildfly systemd unit file
  template: src=wildfly_systemd.j2 dest=/lib/systemd/system/wildfly owner=root
            group=root mode=0750
  notify:
    - reload systemd
    - restart wildfly
    - change standalone data mode
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7)

- name: Open wildfly management tcp port
  firewalld: port={{ wildfly_manage_port }}/tcp permanent=true immediate=true
             state=enabled
  when: wildfly_use_firewalld

- name: Open wildfly management udp port
  firewalld: port={{ wildfly_manage_port }}/udp permanent=true immediate=true
             state=enabled
  when: wildfly_use_firewalld

- name: Open wildfly http tcp port
  firewalld: port={{ wildfly_http_port }}/tcp permanent=true immediate=true
             state=enabled
  when: wildfly_use_firewalld

- name: Open wildfly http udp port
  firewalld: port={{ wildfly_http_port }}/udp permanent=true immediate=true
             state=enabled
  when: wildfly_use_firewalld

- name: Enable and start the service (not in docker)
  service: name=wildfly enabled=yes state=started
  when: wildfly_start_service

- name: Start wildfly without service
  command: "{{ wildfly_dir }}/bin/init.d/wildfly-init-redhat.sh restart"
  when: not wildfly_start_service

- name: Change standalone data mode
  file: path={{ wildfly_dir }}/standalone/data mode=0750 recurse=yes
        owner={{ wildfly_user }} group={{ wildfly_group }} state=directory

- name: Delete wildfly tar file
  file: path={{ wildfly_download_dir }}/{{ wildfly_download_file }}
        state=absent

- name: Create a version file
  template: src=version.j2 dest={{ wildfly_version_file }} mode=0750
            owner={{ wildfly_user }} group={{ wildfly_group }}
